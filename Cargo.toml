[workspace.package]
description = "Run Typst in JavaScriptWorld."
authors = ["Typst.ts Developers", "The Typst Project Developers"]
version = "0.6.1-rc3"
edition = "2021"
readme = "README.md"
license = "Apache-2.0"
homepage = "https://myriad-dreamin.github.io/typst.ts/"
repository = "https://github.com/Myriad-Dreamin/typst.ts"
rust-version = "1.88"

[workspace]
resolver = "2"
members = [
    "benches/lowering",

    "crates/reflexo",
    "crates/reflexo-typst",
    "crates/conversion/typst2vec",
    "crates/conversion/typst2hast",
    "crates/conversion/vec2canvas",
    "crates/conversion/vec2bbox",
    "crates/conversion/vec2sema",
    "crates/conversion/vec2dom",
    "crates/conversion/vec2svg",

    "cli",

    "fuzzers/incremental",

    "packages/parser",
    "packages/compiler",
    "packages/renderer",
    "packages/typst.node",

    "packages/ng/compiler",

    "server/dev",

    "tools/rkyv-assertions",

    "tests/common",
    "tests/heap-profile",
    "tests/incremental",
    "tests/integration",
    "tests/std",
    "tests/docs",
]
exclude = ["projects"]

[profile.release]
opt-level = 3
debug = false
strip = true

# The profile that 'dist' will build with
[profile.dist]
inherits = "release"
incremental = true
lto = "thin"

# todo: https://github.com/typst/typst/pull/2771
# nightly feature

# [workspace.lints.clippy]
# uninlined_format_args = "warn"

[workspace.dependencies]
typst = "0.14.0"
typst-eval = "0.14.0"
typst-ide = "0.14.0"
typst-pdf = "0.14.0"
typst-render = "0.14.0"
typst-svg = "0.14.0"
typst-syntax = "0.14.0"
typst-html = "0.14.0"

ttf-parser = "0.25.0"

typst-assets = { git = "https://github.com/typst/typst-assets", rev = "fbf00f9" }
typst-dev-assets = { git = "https://github.com/typst/typst-dev-assets", rev = "bfa947f" }

# general
anyhow = "1"
async-recursion = "1.1"
async-trait = "0.1.83"
cfg-if = "1.0"
chrono = { version = "0.4.38", default-features = false, features = [
    "clock",
    "std",
] }
futures-util = "0.3.31"
parking_lot = "0.12.3"
pollster = "0.3.0"
rayon = "1.10.0"
strum = { version = "0.26.3", features = ["derive"] }
tokio = { version = "1.40.0", features = ["full"] }

# data structure and algorithm
comemo = "0.5.0"
elsa = "1.10.0"
ecow = "0.2.2"
indexmap = "2"
unicode-width = "0.2.0"
dashmap = "5"

# cli, terminal and tui
ansi_term = "0.12.1"
clap = { version = "4.5.20", features = [
    "derive",
    "env",
    "unicode",
    "wrap_help",
] }
clap_complete = "4.5.20"
clap_complete_fig = "4.5.2"
clap_mangen = { version = "0.2.24" }
human-panic = "2.0.2"
rustyline = { version = "14.0.0", features = ["derive"] }

# system
dirs = "6"
fontdb = { version = "0.23", default-features = false }
path-clean = "1.0.1"
pathdiff = "0.2.2"
walkdir = "2"

# web
js-sys = "^0.3"
napi = { version = "2", features = ["serde-json", "napi4"] }
napi-derive = "2"
wasm-bindgen = "^0.2"
wasm-bindgen-futures = "^0.4"
wasm-bindgen-test = "0.3.45"
web-sys = "^0.3"
# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7" }

# image processing
image = { version = "0.25.5", default-features = false, features = [
    "png",
    "jpeg",
    "gif",
] }
resvg = { version = "0.43", default-features = false, features = [
    "raster-images",
] }
svgtypes = "0.15.2"
tiny-skia = "0.11.4"
tiny-skia-path = "0.11.4"

# cryptography and processing
ansi-to-html = "0.2.1"
base64 = "0.22"
base64-serde = "0.7.0"
hex = "0.4.3"
flate2 = "1"
fxhash = "0.2.1"
nohash-hasher = "0.2.0"
rkyv = "0.7.42"
rustc-hash = "2"
serde = { version = "1.0.210" }
serde_json = "1.0.131"
serde_with = { version = "3.6", features = ["base64"] }
serde-wasm-bindgen = "^0.6"
sha2 = "0.10.6"
siphasher = "1"
tar = "0.4"
toml = "0.8"
xmlparser = "0.13.6"

# logging and tracing
env_logger = "0.11.5"
log = "0.4.22"

# test
insta = "1.40.0"

# misc
codespan-reporting = "0.11"
vergen = { version = "9.0.1", features = [
    "build",
    "cargo",
    # "git",
    # "gitcl",
    "rustc",
] }
vergen-gitcl = { version = "1.0.1" }

# tinymist's world implementation
typst-shim = { version = "0.13.17" }
tinymist-std = { version = "0.13.17", default-features = false }
tinymist-task = { version = "0.13.17", default-features = false }
tinymist-world = { version = "0.13.17", default-features = false }
tinymist-package = { version = "0.13.17", default-features = false }
tinymist-project = { version = "0.13.17", default-features = false }

# project core
reflexo = { version = "0.6.1-rc3", path = "crates/reflexo", default-features = false }
reflexo-typst = { version = "0.6.1-rc3", path = "crates/reflexo-typst" }

# conversions
reflexo-typst2vec = { version = "0.6.1-rc3", path = "crates/conversion/typst2vec" }
reflexo-typst2hast = { version = "0.6.1-rc3", path = "crates/conversion/typst2hast" }
reflexo-vec2canvas = { version = "0.6.1-rc3", path = "crates/conversion/vec2canvas" }
reflexo-vec2sema = { version = "0.6.1-rc3", path = "crates/conversion/vec2sema" }
reflexo-vec2bbox = { version = "0.6.1-rc3", path = "crates/conversion/vec2bbox" }
reflexo-vec2dom = { version = "0.6.1-rc3", path = "crates/conversion/vec2dom" }
reflexo-vec2svg = { version = "0.6.1-rc3", path = "crates/conversion/vec2svg" }

# project components
typst-ts-test-common = { version = "0.6.1-rc3", path = "tests/common" }
typst-ts-dev-server = { version = "0.6.1-rc3", path = "server/dev" }
typst-ts-cli = { version = "0.6.1-rc3", path = "cli" }

[workspace.lints.rust]
# missing_docs = "warn"
unexpected_cfgs = { level = "allow", check-cfg = [
    'cfg(wasm_bindgen_unstable_test_coverage)',
    'cfg(noop)',
    'cfg(used_linker)',
] }

[workspace.lints.clippy]
uninlined_format_args = "warn"
# missing_errors_doc = "warn"
# missing_panics_doc = "warn"
missing_safety_doc = "warn"
undocumented_unsafe_blocks = "warn"

[patch.crates-io]

reflexo = { path = "crates/reflexo/" }
reflexo-typst = { path = "crates/reflexo-typst/" }
reflexo-vec2svg = { path = "crates/conversion/vec2svg/" }
typst = { git = "https://github.com/ParaN3xus/typst.git", rev = "e19bbcb7a54c41fd44df3ddc1c0374c9b86bc1f5" }
typst-syntax = { git = "https://github.com/ParaN3xus/typst.git", rev = "e19bbcb7a54c41fd44df3ddc1c0374c9b86bc1f5" }
typst-ide = { git = "https://github.com/ParaN3xus/typst.git", rev = "e19bbcb7a54c41fd44df3ddc1c0374c9b86bc1f5" }
typst-render = { git = "https://github.com/ParaN3xus/typst.git", rev = "e19bbcb7a54c41fd44df3ddc1c0374c9b86bc1f5" }
typst-svg = { git = "https://github.com/ParaN3xus/typst.git", rev = "e19bbcb7a54c41fd44df3ddc1c0374c9b86bc1f5" }
typst-pdf = { git = "https://github.com/ParaN3xus/typst.git", rev = "e19bbcb7a54c41fd44df3ddc1c0374c9b86bc1f5" }
typst-eval = { git = "https://github.com/ParaN3xus/typst.git", rev = "e19bbcb7a54c41fd44df3ddc1c0374c9b86bc1f5" }
typst-html = { git = "https://github.com/ParaN3xus/typst.git", rev = "e19bbcb7a54c41fd44df3ddc1c0374c9b86bc1f5" }
typst-shim = { git = "https://github.com/ParaN3xus/tinymist.git", rev = "81f5b5d5505f739eab779e342b849bd78fb43bbe" }
tinymist-derive = { git = "https://github.com/ParaN3xus/tinymist.git", rev = "81f5b5d5505f739eab779e342b849bd78fb43bbe" }
tinymist-std = { git = "https://github.com/ParaN3xus/tinymist.git", rev = "81f5b5d5505f739eab779e342b849bd78fb43bbe" }
tinymist-task = { git = "https://github.com/ParaN3xus/tinymist.git", rev = "81f5b5d5505f739eab779e342b849bd78fb43bbe" }
tinymist-package = { git = "https://github.com/ParaN3xus/tinymist.git", rev = "81f5b5d5505f739eab779e342b849bd78fb43bbe" }
tinymist-world = { git = "https://github.com/ParaN3xus/tinymist.git", rev = "81f5b5d5505f739eab779e342b849bd78fb43bbe" }
tinymist-project = { git = "https://github.com/ParaN3xus/tinymist.git", rev = "81f5b5d5505f739eab779e342b849bd78fb43bbe" }

# typst-shim = { path = "../tinymist/crates/typst-shim" }
# tinymist-derive = { path = "../tinymist/crates/tinymist-derive" }
# tinymist-std = { path = "../tinymist/crates/tinymist-std" }
# tinymist-task = { path = "../tinymist/crates/tinymist-task" }
# tinymist-package = { path = "../tinymist/crates/tinymist-package" }
# tinymist-world = { path = "../tinymist/crates/tinymist-world" }
# tinymist-project = { path = "../tinymist/crates/tinymist-project" }


# [patch."https://github.com/Myriad-Dreamin/tinymist.git"]
# typst-shim = { path = "../tinymist/crates/typst-shim" }
# tinymist-analysis = { path = "../tinymist/crates/tinymist-analysis" }
# tinymist-std = { path = "../tinymist/crates/tinymist-std" }
# tinymist-task = { path = "../tinymist/crates/tinymist-task" }
# tinymist-world = { path = "../tinymist/crates/tinymist-world" }
# tinymist-project = { path = "../tinymist/crates/tinymist-project" }
