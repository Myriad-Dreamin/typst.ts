name: reflexo::ci
on:
  push:
    branches:
      - main
      - nightly
    tags:
      - '*'
  pull_request:
    types: [opened, synchronize]
    branches:
      - main
      - nightly
  workflow_dispatch:

env:
  RUSTFLAGS: '-Dwarnings'

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Checkout test assets
        uses: actions/checkout@v4
        with:
          repository: Myriad-Dreamin/typst
          ref: assets-files
          path: assets/files
      - name: Install Mold
        uses: rui314/setup-mold@v1
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: 1.88.0
          components: clippy, rustfmt
      # https://github.com/Renumics/spotlight/blob/main/.github/workflows/ci.yml
      # https://www.ubuntuupdates.org/package/google_chrome/stable/main/base/google-chrome-stable
      # cp ./chromedriver-linux64/chromedriver /${HOME}/.cargo/bin/
      - name: Set up Chrome
        run: |
          VERSION_STRING="129.0.6668.70-1"
          wget "https://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_${VERSION_STRING}_amd64.deb"
          sudo dpkg -i "google-chrome-stable_${VERSION_STRING}_amd64.deb"
          google-chrome --version
      - name: Set up Chrome driver
        run: |
          wget https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/129.0.6668.70/linux64/chromedriver-linux64.zip
          unzip chromedriver-linux64.zip
          sudo mv ./chromedriver-linux64/chromedriver /usr/local/bin/chromedriver
          chromedriver --version
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | bash
      - name: Fmt check
        run: cargo fmt --check --all
      # todo: https://github.com/typst/typst/pull/2767
      #  --all-features
      - name: Clippy check
        run: cargo clippy --profile dist --workspace --all-targets
      - name: Documentation check
        run: cargo doc --profile dist --workspace --no-deps
      - name: Install packages
        uses: borales/actions-yarn@v4
        with:
          cmd: install
      - name: Build
        run: |
          cargo build --profile dist --bin typst-ts-dev-server
      - name: Build Typescript packages
        run: |
          yarn run build:pkg
      - name: Prepare artifacts
        run: |
          cargo run --profile dist --bin typst-ts-dev-server -- compile corpus --cat bugs,layout,lint,math,meta,text,visualize
      - name: Test
        run: |
          cargo test --profile dist --no-fail-fast \
            -p reflexo-typst \
            -p typst-ts-cli  -p typst-ts-integration-test
      - name: Test Browser
        # todo: other package tests
        run: cd packages/typst.ts && yarn test
      - name: Archive Test Results (WebAssembly Renderer in Chrome)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: wasm-renderer-chrome.test_points.json.gz
          path: target/typst-artifacts/integrations/renderer/test_points.chrome.json.gz
      - name: Archive Test Results (Vitest)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vitest-refs.gz
          path: packages/typst.ts/refs

  prepare-build:
    runs-on: 'ubuntu-latest'
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v4
      - id: tag # get the tag from package.json
        run: echo "tag=v$(jq -r '.version' package.json)" >> $GITHUB_OUTPUT
      - name: Show tag
        run: echo "Tag is ${{ steps.tag.outputs.tag }}"

  announce:
    needs: [prepare-build]
    permissions:
      contents: write
    uses: ./.github/workflows/announce.yml
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    secrets: inherit
    with:
      tag: ${{ needs.prepare-build.outputs.tag }}

  build:
    needs: [prepare-build] # , announce
    permissions:
      contents: write
    uses: ./.github/workflows/release.yml
    secrets: inherit
    with:
      tag: ${{ (startsWith(github.ref, 'refs/tags/') && needs.prepare-build.outputs.tag) || '' }}
      targets: ${{ (!startsWith(github.ref, 'refs/tags/') && 'aarch64-apple-darwin,x86_64-pc-windows-msvc,x86_64-unknown-linux-gnu') || 'all' }}
